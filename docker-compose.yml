version: '3.7'

services:

  #USER APP
  user:
    build:
      context: ./user
    container_name: user-service
    volumes:
      - .:/user/src/app
      - ./src/app/node_modules
    ports:
      - 3000:3000
    command: npm run start:dev ./user
    networks:
      - webnet
    depends_on:
      - rabbitmq
      - postgresSql

  #MOVIE APP
  movie:
    build:
      context: ./movies
    container_name: movie-service
    volumes:
      - .:/movies/src
    ports:
      - 3001:3001
    command: npm run start:dev ./movies
    networks:
      - webnet
    depends_on:
      - rabbitmq
      - postgresSql
      
  #SONARQUBE
  sonar:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    restart: always

  #DATABASE
  postgresSql:
    container_name: postgresSql
    image: postgres:latest
    networks:
      - webnet
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB1: users
      POSTGRES_DB2: movies
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  #RABBIT MQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 15672:15672
    restart: always
    networks:
      - webnet
    environment: 
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
      RABBITMQ_DEFAULT_VHOST: DSrabbitmq
      RABBITMQ_VM_MEMORY_HIGH_WATERMARK: 1024MB

networks:
  webnet:
volumes:
  pgdata: